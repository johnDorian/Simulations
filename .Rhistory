plot(FLOW)
hist(TP)
cat(0.01,0.01,0.02,0.01,0.13,0.01,0.04,0.01,0.02,0.01,0.04,0.03,0.11,0.03,0.01,0.54,0.02,0.04,0.03,0.03,0.02,0.02,0.01,0.06,0.02,0.04,0.01,0.01,0.02,0.03,0.02,0.01,0.03,0.02,0.01,0.19,0.64,0.53,0.46,0.11,0.02,0.01,0.03,0.01,0.03,0.01,0,0.01,0,0.01,0.02,0.02,0.01,0.01,0.01,0.02,0.04,0.03,0.01,0.02,0.01,0.01,0.01,0.01,0.01,0,0.01,0.01,0.02,0.03,0.01,0.01,0,0,0,0,0.01,0,0.01,0.01,0.02,0.02,0.02,0.02,0.01,0.01,0,0.01,0.02,0.01,0.1,0.05,0.01,0.01,0,0.01,0,0.13,0.01,0.01,0.02,0,0.01,0.14,0.02,0.01,0.15,0.01,0.01,0.01,0.05,0.03,0.01,0.01,0.04,0.01,0.2,0.06,0.04,0.01,0.135,0.01,0.01,0.03,0.01,0.01,0.03,0.01,0.01,0.07625,0.256666666666667,0.18,0.1,0.08,0.07,0.06,0.02,0.02,0.01,0.02,0.02,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.03,1.25666666666667,1.25,0.08,0.03,0.16,0.04,0.07,0.03,0.01,0.04,0.02,0.01,0.02,0.01,0.01,0.01,0.01,0.01,0.01,0,0,0,0.03,0.02,0.01,0.01,0.01,0.01,0.11,0.07,0.03,0.01,0.03,0.03,0.01,0.01,0.01,0.06,0.03,0.1,0.04,0.02,0.01,0.01,0.01,0,0.01,0.01,0.01,0.01,0.01,0.02,0.01,0.04,0.07,0.03,0.02,0.02,0.01,0.01,0.03,0.02,0.02,0.01,0.01,0.01,0.01,0,0,0.01,0.06,0.03,0.03,0.03,0.02,0.01,0.01,0.01,0.2,0.04,0.02,0.08,0.05,0.2225,0.06,0.07,0.04,0.02,0.01,0.13,0.13,0.02,0.01,0.01,0.01,0,0,0.01,0.01,0.02,0.02,0.01,0.01,0.02,0.04,0.03,0.02,0.02,0.02,0.01,0.02,0.02,0.02,0.02,0.02,0.01,0.01,0.02,0.02,0.01,0.01,0.01,0.02,0.02,0.02,0.03,0.03,0.02,0.03,0.02,0.02,0.01,0.01,0.01,0.01,0.01,0.02,0.02,0.02,0.02,0.06,0.02,0.02,0.03,0.02,0.02,0.03,0.03,0.03,0.06,0.29,0.04,0.03,0.02,0.04,0.02,0.02,0.02,0.02,0.02,0.19,0.1,0.09,0.09,0.03,0.03,0.03,0.03,0.02,0.03,0.17,0.06,0.03,0.03,0.01,0.04,0.01,0.01,0.17,0.06,0.03,0.21,0.1,0.19,0.12,0.07,0.12,0.13,0.12,0.11,0.13,0.12,0.1,0.09,0.09,0.07,0.1,0.06,0.1,0.06,0.06,0.07,0.05,0.04,0.01,0.01,0.035,0.01,0.01,0.01,0.01,0.01,0.08,0.01,0.03,0.01,0.01,0.02,0.05,0.06,0.01,0.01,0.01,0.06,0.03,0.11,0.07,0.04,0.08,0.02,0.07,0.07,0.1,0.08,0.12,0.08,0.0775,0.09,0.02,0.04,0.06,0.22,0.175,0.23,0.22,0.25,0.28,0.2,0.2,0.34,0.19,0.12,0.09,0.1,0.11,0.075,0.07,0.065,0.07,0.13,0.12,0.25,0.1,0.12,0.11,0.1,0.12,0.17,0.31,0.44,0.45,0.39,0.23,0.195,0.23,0.05,0.05,0.01,0.02,0.01,0.03,0.06,0.06,0.08,0.06,0.06,0.06,0.105,0.08,0.07,0.04,0.04,0.03,0.03,0.04,0.06,0.02,0.02,0.02,0.02,0.015,0.02,0.03,0.03,0.03,0.035,0.02,0.04,0.03,0.04,0.0233333333333333,0.02,"\n", file="ex.data",#
    sep="\n")#
TP<-as.matrix(read.table("ex.data",sep=","))#
unlink("ex.data")#
#
#
#
cat(2.72,1.88,2.8,2.84,1.36,1.17,8.08,2.6,2.88,8.04,456.25,456.25,1774.12,36.76,15.04,53.2,234.75,471.61,94.37,31.8,53.32,30.96,105.06,55.8,53.92,9.23,3.8,5.48,2.28,1.4,141,31.8,9.76,53,18.49,54.73,232.97,489.44,1475.93,1020.22,22.88,76.4,41.96,9.76,9.2,8.08,11.21,9.2,10.52,7.08,58.56,134.84,10.84,10.84,10.96,17.63,12.48,12.96,124.5,172.32,23.16,8.24,53.0156,16.0356,9.2,3.68,3.68,7.8,130.34,21.6,2.68,1.92,1.6,2.56,3.32,9.08,52.72,12.28,8.1,4.84,54.54,24.84,57.33,22.6,3.48,12.51,2.22,1.72,10.75,10.66,3.15,140.35,4.84,6.04,3.56,1.2,0.48,0.56444,40.36315,13.25,24.92,8.88,4.64,40.35,28.8,4.9,3.68,7.04,2.6,1.24,3.32,129.15,6.8,10.72,22.21,17.48,1079.85,256.03,32.66,13.85,22.24,9.36,0.28,31.88,4.71,0.2842,0.12,0.79,3.88,9.8,1991.14,1031.71,346.44,172.16,115.6,66.36,10.4,7.84,9.8,51.27,43.96,3.35,0,10.37,6.61,35.51,13.56,49.85,138.99,164.97,10221.68,733.91,126.11,2622.12,724.23,145.33,42.25,26.12,15.83,36.41,8.96,61.4,4.28,0,0.03,0.44,0.12,1.19,1.62,3.5,4.61,47.89,67.51,17.74,6.27,5.61,17.3,1253.3,1278.4,33.05,4.47,7.08,86.6,18.41,1.43,0,0.36,17.76,84.31,150.84,34.96,74.98,7.52,5.24,3.64,45.42,11.4,8.73,12.24,5.36,26.96,7.63,15.67,263.98,113.69,54.3,16.66,1.28,0,175.21,108.64,34.07,9.25,5.67,2.49,6.91,3.16,6.97,10.62,75.31,53.51,29.27,24.89,21.52,13.71,4.13,1.61,131.51,28.06,14.29,15.09,28.77,46.44,50.23,50.23,19.56,10.34,1.32,1.38,118.9,11.65,5.33,2,2.78,3.4,2.59,1.92,0.96,0,5.96,0.9642,1.32,12.76,10.08,25,16.26,13.78,28.56,22.76,23.08,23.37,19.32,13.92,9.2,11.25,4.8,0.88,2.52,7.16,10.75,9.1,7.18,8.68,5.77,0.32,1.62,0.56,0.36,0.24,8.79,0.82,0.23,0.44,0.61,0.32,0.12,0.28,0.16,8.03,21.65,22.36,19.46,20.01,16.11,15.99,5.45,13.72,8.77,9.69,282.02,14.26,17.26,20.04,14.04,1,0.16,17.94,10.48,7.83,95.49,94.16,91.71,29.94,25.78,22.57,20.26,9.72,13.63,20.56,26.25,28.78,19.83,15.83,35.64,82.1,2.35,2.18,545.25,682.63,428.27,529.81,262.29,262.29,536.03,249.96,217.97,167.39,167.39,167.39,145.03,97.48,97.48,97.48,85.01,64.21,64.21,69.02,63.24,46.1,47.88,45.09,42.03,4.23,1.17,2.04,0.12,9.97,9.51,9.96,31.68,22.47,41.27,3.08,1.09,0.04,0.32,0,43.93,42.03,78.27,123.42,96.56,78.03,69.175,81.39,76.31,24.98,22.84,22.04,83.2,110.18,121.31,121.14,111.26,72.44,74.04,65.7,39.62,47.74,208.42,982.24,918.33,982.24,1300,1576.87,1840.45,1209.11,1497.54,1291.02,991.3,816.55,690.05,395.52,395.52,445.61,383.38,683.93,807.21,1325.34,1437.56,807.7,807.7,984.78,807.7,678.74,1195.98,1229.94,1044.65,931.53,894.96,799.04,799.04,863.57,772.08,740.36,230,28.48,19.36,17.27,11.2,67.29,64.12,60.67,60.75,59.42,59.42,63.21,58.14,54.03,44.27,64.12,58.42,53.19,54.28,45.89,51.46,51.04,54.91,54.91,59.12,37.47,22.62,28.7,65.5,65.35,65.5,64,60.87,57.78,60.79,18.77,"\n", file="ex.data",#
    sep="\n")#
FLOW<-as.matrix(read.table("ex.data",sep=","))#
unlink("ex.data")#
#
#
#
#
#
hist(TP)
hist(FLOW)
boxcox.fit(TP+0.1)
boxcox.fit(TP+0.1)$lambda
boxcox.fit(FLOW+0.1)$lambda
bct
hist(bct(TP,-2.3)
)
hist(bct(TP+0.1,-2.3)
)
boxcox.fit(TP+0.01)$lambda
boxcox.fit(TP+0.1)$lambda
boxcox.fit(TP+0.1)$lambda
hist(bct(TP+0.1,boxcox.fit(TP+0.01)$lambda))
hist(bct(TP+0.1,boxcox.fit(TP+0.1)$lambda))
hist(bct(TP+0.01,boxcox.fit(TP+0.01)$lambda))
density
?density
plot(density(c(-20,rep(0,98),20)), xlim = c(-4,4))# IQR = 0
density(bct(TP+0.01,boxcox.fit(TP+0.01)$lambda))
plot(density(bct(TP+0.01,boxcox.fit(TP+0.01)$lambda)))
plot(density(bct(TP+0.1,boxcox.fit(TP+0.1)$lambda)))
plot(density(bct(TP+0.001,boxcox.fit(TP+0.001)$lambda)))
plot(density(bct(TP+0.0001,boxcox.fit(TP+0.0001)$lambda)))
plot(density(bct(TP+0.0003,boxcox.fit(TP+0.0003)$lambda)))
plot(density(bct(TP+0.001,boxcox.fit(TP+0.001)$lambda)))
plot(density(bct(FLOW+0.1,boxcox.fit(FLOW+0.1)$lambda)))
plot(density(bct(FLOW+1,boxcox.fit(FLOW+1)$lambda)))
plot(density(bct(FLOW+.001,boxcox.fit(FLOW+.001)$lambda)))
plot(density(bct(FLOW+1,boxcox.fit(FLOW+1)$lambda)))
plot(density(bct(FLOW+1,boxcox.fit(FLOW+1)$lambda)),main="TP")
plot(density(bct(FLOW+1,boxcox.fit(FLOW+1)$lambda)),main="FLOW")
plot(density(bct(TP+0.001,boxcox.fit(TP+0.001)$lambda)),main="TP")
setwd("~/Desktop/")
setwd("~/Desktop/")#
pdf("boxcox_tp_density.pdf")#
plot(density(bct(FLOW+1,boxcox.fit(FLOW+1)$lambda)),main="FLOW")#
dev.off()#
pdf("boxcox_flow_density.pdf")#
plot(density(bct(TP+0.001,boxcox.fit(TP+0.001)$lambda)),main="TP")#
dev.off()
data
data$TP<-bct(TP+0.001,boxcox.fit(TP+0.001)$lambda
)
data$FLOW<-bct(FLOW+1,boxcox.fit(FLOW+1)$lambda))
data$FLOW<-bct(FLOW+1,boxcox.fit(FLOW+1)$lambda)
data
density(data$TP)
plot(density(data$TP))
plot(density(data$FLOW))
write.table(data,file="tp_flow.txt")
TP
density(log10(TP+0.01))
plot(density(log10(TP+0.01)))
plot(density(log10(TP+0.1)))
plot(density(log10(TP+0.001)))
hist(log10(TP+0.001))
hist(log10(TP+0.01))
hist(log10(TP+0.001))
shapiro.test(hist(log10(TP+0.001)))
shapiro.test((log10(TP+0.001)))
hist(log(TP+0.1))
hist(log(TP+0.01))
hist(log10(TP+0.01))
hist(log10(TP+0.1))
hist(log10(TP+0.001))
setwd("~/Desktop/")#
pdf("boxcox_flow_density.pdf")#
plot(density(bct(FLOW+1,boxcox.fit(FLOW+1)$lambda)),main="FLOW")#
dev.off()#
pdf("boxcox_tp_density.pdf")#
plot(density(bct(TP+0.001,boxcox.fit(TP+0.001)$lambda)),main="TP")#
dev.off()
write.table(data,file="trans_tp_flow.txt")
library(gsta)
library(gstat)
data(meuse)
g <- gstat(id = "ln.zinc", formula = log(zinc)~1, locations = ~x+y,data = meuse)
?gstat
g <- gstat(g, id = "ln.lead", formula = log(lead)~1, locations = ~x+y, #
	data = meuse)
plot(variogram(g))
g <- gstat(g, id = "ln.zinc", model = vgm(.55, "Sph", 900, .05))#
g <- gstat(g, id = "ln.lead", model = vgm(.55, "Sph", 900, .05))
g <- gstat(g, id = c("ln.zinc", "ln.lead"), model = vgm(.47, "Sph", 900, .03))
plot(variogram(g), model = g$model, main = "models fitted by eye")
v
g
g$data
meuse
getwd()
setwd("~/Documents/code/Simulations/")
data<-read.csv("TP_flow.csv", header=TRUE)#
## Load the nessacry libraries. A couple for variograms, and some for the boxcox transformations.#
library(gstat);library(geoR);library(MASS);library(TeachingDemos);library(moments)#
## Clean up the dataset - create a back.up of the data#
back.up <- data#
data <- data[,-c(1,2)]#
names(data) <- c("X","Y","TP","FLOW")#
## Add arbituary value to the data, so we can transform the data.#
data$TP <- log(data$TP+0.01)#
data$FLOW <- log(data$FLOW+0.01)
spdf <- SpatialPointsDataFrame(data[,1:2],data)
g = gstat(NULL, "TP", spdf$TP ~ 1, spdf)
g = gstat(g, "FLOW", spdf$FLOW ~ 1, spdf)
plot(g)
g
g = gstat(g,id=c("TP","FLOW"),model=vgm(0.5,"Exp",48,0.2),fill.all=TRUE)
g
g$data
plot(variogram(g))
variogram(g)
g[1]
g[2]
data(meuse.grid)
meuse.grid
names(meuse.grid)
sum(part.a)
sum(meuse.grid$part.a)
meuse.gstat <- gstat(id = "zinc", formula = zinc ~ 1, locations = ~ x + y,#
	data = meuse, nmax = 7, set = list(idp = .5))
meuse.gstat
z <- predict(meuse.gstat, meuse.grid)
z
names(z)
sum(z$zinc.var)
sum(z$zinc.var,is.na=T)
?cokrinng
data(meuse)#
coordinates(meuse) = ~x+y#
v <- variogram(log(zinc)~1, meuse)#
m <- fit.variogram(v, vgm(1, "Sph", 300, 1))
m
n=10
1:n
rep(1,n)
as.factor(rep(1,n))
length(as.factor(rep(1,n)))
if(1==Inf)
"yes"
do.call(sum,c(1,2))
do.call(sum,list(c(1,2)))
x<-c(1,2,3,4)
x
x-1
x-x[1]
x-x[2]
x[-2]-x[2]
x[-3]-x[3]
x[-4]-x[4]
test<-function(x,y){
	n=length(x)
	res=x[-y]-x[y]
}
test(c(1,2,3,4),3)
test<-function(x,y){#
	res=x[-y]-x[y]#
	return(res)#
}
test(c(1,2,3,4),3)
apply(1:3,test(c(1,2,3,4),i))
?apply
apply(x,1:3,function(x) test(c(1,2,3,4),i))
x
apply(x,1:3,function(x) test(x,i))
sapply(x,test)
replicate(n,test(x))
n
rm(n)
n
replicate(n,test(x))
unction(x,n) replicate(n,test(x))
function(x,n) replicate(n,test(x))
test2<-function(x,n) replicate(n,test(x))
test2(x,3)
x
y
test2()
test<-function(x,y){#
	res=x[-y]-x[y]#
}
test(c(1,2,3,4),4)
test<-function(x,y){#
	res=x[-y]-x[y]#
	return(res)#
}
test(c(1,2,3,4),4)
test2<-function(x,n) replicate(n,test(x))
test2
test2(c(1,2,3,4),2)
test2(c(1,2,3,4),1)
test2(c(1,2,3,4),1:10)
x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))
x
foo <- function(x=1, y=2) c(x,y)
bar <- function(n, x) replicate(n, foo(x=x))
bar(5, x=3)
?replicate
X <- list(list(a=pi, b=list(c=1:1)), d="a test")#
rapply(X, function(x) x, how="replace")
X
x
rapply(X, sqrt, classes="numeric", how="replace")
1-x
x<-c(1,2,3,4)
x
1-x
x-x
x-t(x)
t(x)
t(t(x))
t(t(x))-t(x)
t(t(x))[i]-t(x)
t(t(x))[1]-t(x)
t(t(x))[2]-t(x)
t(t(x))[3]-t(x)
t(t(x))[4]-t(x)
for(i in 1:length(x)){
t(t(x))[i]-t(x)
}
for(i in 1:length(x)){
print(t(t(x))[i]-t(x))
}
t(x)
rbind(t(x))
rbind(t(x)^4)
rbind(t(x),t(x))
replicate(4,t(x))
r<-replicate(4,t(x))
r-r
r-t(x)
r-t(t(x))
diag
diag(r)
r<-replicate(4,t(x))
replicate(4,t(x))
dim(r)
array(0,c(4,4))
min(4,4)
1l
1L
r[1L+0L:(m-1L)*(n+1L)]
m
r[1L+0L:(4-1L)*(4+1L)]
1L
0L
r[1L]
r[)L]
r[0L]
4-1L
3*5
1:15
r[1:15]
4-1L
4+1L
(4-1L)*(4+1L)
1L+0L
?L
??L
svd(r)
r
r2<-array(r,c(4,4,4))
r2
r2
r2[1]
r2[1,1]=
r2[1,1]
r2[1,1,1]
r2[[[1]]]
r2[[1]]
r2[[2]]
r2[[3]]
r2[[4]]
r2[[5]]
r
x
rep(x,4)
rep(x,length(4))
rep(x,length(4),by=4)
rep(x,by=4)
rep(x,each=4)
array(rep(x,each=4),c(1,4))
array(rep(x,each=4),c(4,4))
array(rep(x,each=4),c(4,4))-x
